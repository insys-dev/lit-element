{"version":3,"file":"lit-element.js","sourceRoot":"","sources":["src/lit-element.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at\r\n * http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at\r\n * http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at\r\n * http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at\r\n * http://polymer.github.io/PATENTS.txt\r\n */\r\n\r\n/**\r\n * The main LitElement module, which defines the [[`LitElement`]] base class and\r\n * related APIs.\r\n *\r\n *  LitElement components can define a template and a set of observed\r\n * properties. Changing an observed property triggers a re-render of the\r\n * element.\r\n *\r\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\r\n * component:\r\n *\r\n *  ```js\r\n * import {LitElement, html} from 'lit-element';\r\n *\r\n * class MyElement extends LitElement {\r\n *\r\n *   // Declare observed properties\r\n *   static get properties() {\r\n *     return {\r\n *       adjective: {}\r\n *     }\r\n *   }\r\n *\r\n *   constructor() {\r\n *     this.adjective = 'awesome';\r\n *   }\r\n *\r\n *   // Define the element's template\r\n *   render() {\r\n *     return html`<p>your ${adjective} template here</p>`;\r\n *   }\r\n * }\r\n *\r\n * customElements.define('my-element', MyElement);\r\n * ```\r\n *\r\n * `LitElement` extends [[`UpdatingElement`]] and adds lit-html templating.\r\n * The `UpdatingElement` class is provided for users that want to build\r\n * their own custom element base classes that don't use lit-html.\r\n *\r\n * @packageDocumentation\r\n */\r\nimport {render, ShadyRenderOptions} from 'lit-html/lib/shady-render.js';\r\n\r\nimport {PropertyValues, UpdatingElementMixin} from './lib/updating-element.js';\r\n\r\nexport * from './lib/updating-element.js';\r\nexport * from './lib/decorators.js';\r\nexport {html, svg, TemplateResult, SVGTemplateResult} from 'lit-html/lit-html.js';\r\nimport {supportsAdoptingStyleSheets, CSSResult, unsafeCSS} from './lib/css-tag.js';\r\nexport * from './lib/css-tag.js';\r\n\r\nimport { interval, Subject } from 'rxjs';\r\nimport { buffer, map, takeUntil } from 'rxjs/operators';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    litElementVersions: string[];\r\n  }\r\n}\r\n\r\n// IMPORTANT: do not change the property name or the assignment expression.\r\n// This line will be used in regexes to search for LitElement usage.\r\n// TODO(justinfagnani): inject version number at build time\r\n(window['litElementVersions'] || (window['litElementVersions'] = []))\r\n    .push('2.4.0');\r\n\r\nexport type CSSResultOrNative = CSSResult|CSSStyleSheet;\r\n\r\nexport interface CSSResultArray extends\r\n    Array<CSSResultOrNative|CSSResultArray> {}\r\n\r\n/**\r\n * Sentinal value used to avoid calling lit-html's render function when\r\n * subclasses do not implement `render`\r\n */\r\nconst renderNotImplemented = {};\r\n\r\n\r\nexport const LitElementMixin = function(superclass: typeof HTMLElement) {\r\n\r\n/**\r\n * Base element class that manages element properties and attributes, and\r\n * renders a lit-html template.\r\n *\r\n * To define a component, subclass `LitElement` and implement a\r\n * `render` method to provide the component's template. Define properties\r\n * using the [[`properties`]] property or the [[`property`]] decorator.\r\n */\r\nreturn class extends UpdatingElementMixin(superclass) {\r\n  /**\r\n   * Ensure this class is marked as `finalized` as an optimization ensuring\r\n   * it will not needlessly try to `finalize`.\r\n   *\r\n   * Note this property name is a string to prevent breaking Closure JS Compiler\r\n   * optimizations. See updating-element.ts for more information.\r\n   * @protected\r\n   */\r\n  static['finalized'] = true;\r\n\r\n  /**\r\n   * Reference to the underlying library method used to render the element's\r\n   * DOM. By default, points to the `render` method from lit-html's shady-render\r\n   * module.\r\n   *\r\n   * **Most users will never need to touch this property.**\r\n   *\r\n   * This  property should not be confused with the `render` instance method,\r\n   * which should be overridden to define a template for the element.\r\n   *\r\n   * Advanced users creating a new base class based on LitElement can override\r\n   * this property to point to a custom render method with a signature that\r\n   * matches [shady-render's `render`\r\n   * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\r\n   *\r\n   * @nocollapse\r\n   */\r\n  static render:\r\n      (result: unknown, container: Element|DocumentFragment,\r\n       options: ShadyRenderOptions) => void = render;\r\n\r\n  /**\r\n   * Array of styles to apply to the element. The styles should be defined\r\n   * using the [[`css`]] tag function or via constructible stylesheets.\r\n   */\r\n  static styles?: CSSResultOrNative|CSSResultArray;\r\n\r\n  /** @private */\r\n  static _styles: Array<CSSResultOrNative|CSSResult>|undefined;\r\n\r\n  /**\r\n   * Return the array of styles to apply to the element.\r\n   * Override this method to integrate into a style management system.\r\n   *\r\n   * @nocollapse\r\n   */\r\n  static getStyles(): CSSResultOrNative|CSSResultArray|undefined {\r\n    return this.styles;\r\n  }\r\n\r\n  /** @nocollapse */\r\n  /** @private */\r\n  static _getUniqueStyles() {\r\n    // Only gather styles once per class\r\n    if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\r\n      return;\r\n    }\r\n    // Take care not to call `this.getStyles()` multiple times since this\r\n    // generates new CSSResults each time.\r\n    // TODO(sorvell): Since we do not cache CSSResults by input, any\r\n    // shared styles will generate new stylesheet objects, which is wasteful.\r\n    // This should be addressed when a browser ships constructable\r\n    // stylesheets.\r\n    const userStyles = this.getStyles();\r\n\r\n    if (Array.isArray(userStyles)) {\r\n      // De-duplicate styles preserving the _last_ instance in the set.\r\n      // This is a performance optimization to avoid duplicated styles that can\r\n      // occur especially when composing via subclassing.\r\n      // The last item is kept to try to preserve the cascade order with the\r\n      // assumption that it's most important that last added styles override\r\n      // previous styles.\r\n      const addStyles = (styles: CSSResultArray, set: Set<CSSResultOrNative>):\r\n          Set<CSSResultOrNative> => styles.reduceRight(\r\n              (set: Set<CSSResultOrNative>, s) =>\r\n                  // Note: On IE set.add() does not return the set\r\n              Array.isArray(s) ? addStyles(s, set) : (set.add(s), set),\r\n              set);\r\n      // Array.from does not work on Set in IE, otherwise return\r\n      // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\r\n      const set = addStyles(userStyles, new Set<CSSResultOrNative>());\r\n      const styles: CSSResultOrNative[] = [];\r\n      set.forEach((v) => styles.unshift(v));\r\n      this._styles = styles;\r\n    } else {\r\n      this._styles = userStyles === undefined ? [] : [userStyles];\r\n    }\r\n\r\n    // Ensure that there are no invalid CSSStyleSheet instances here. They are\r\n    // invalid in two conditions.\r\n    // (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but\r\n    //     this is impossible to check except via .replaceSync or use\r\n    // (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is\r\n    //     false)\r\n    this._styles = this._styles.map((s) => {\r\n      if (s instanceof CSSStyleSheet && !supportsAdoptingStyleSheets) {\r\n        // Flatten the cssText from the passed constructible stylesheet (or\r\n        // undetectable non-constructible stylesheet). The user might have\r\n        // expected to update their stylesheets over time, but the alternative\r\n        // is a crash.\r\n        const cssText = Array.prototype.slice.call(s.cssRules)\r\n                            .reduce((css, rule) => css + rule.cssText, '');\r\n        return unsafeCSS(cssText);\r\n      }\r\n      return s;\r\n    });\r\n  }\r\n\r\n  /** @private */\r\n  _needsShimAdoptedStyleSheets?: boolean;\r\n\r\n  /**\r\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\r\n   * to an open shadowRoot.\r\n   */\r\n  readonly renderRoot!: Element|DocumentFragment;\r\n\r\n  _$changedProperties!: Subject<PropertyValues>;\r\n  _iceInitialized!: boolean;\r\n  _renderBufferInitialized!: boolean;\r\n  _$destroyed!: Subject<never>; //Unsubscribe\r\n\r\n  _initRenderBuffer() {\r\n    // Set up render throttle\r\n    let buffered;\r\n\r\n    const bufferTime = this.getEarlyNumAttribute('bufferTime');\r\n    if(bufferTime !== undefined) {\r\n      const bufferTimeNum = +bufferTime;\r\n\r\n      const $renderInterval = interval(bufferTimeNum);\r\n      const $bufferFlusher = new Subject<never>();\r\n\r\n      // Use interval to throttle render(). \r\n      $renderInterval.pipe(takeUntil(this._$destroyed)).subscribe(() => {\r\n        $bufferFlusher.next();\r\n      });\r\n\r\n      buffered = this._$changedProperties.pipe(buffer($bufferFlusher));\r\n    }\r\n    else buffered = this._$changedProperties.pipe(map(val => [val]));\r\n\r\n    buffered.pipe(takeUntil(this._$destroyed)).subscribe(changedProperties => {\r\n      const spreadMaps = [];\r\n      for(const changedProperty of changedProperties) {\r\n        if(changedProperty) spreadMaps.push(...changedProperty);\r\n      }\r\n      const jointMap = new Map(spreadMaps);\r\n      if(jointMap.size || !this._iceInitialized) this._doUpdate(jointMap);\r\n    });\r\n\r\n    this._renderBufferInitialized = true;\r\n  }\r\n\r\n  /**\r\n   * Performs element initialization. By default this calls\r\n   * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and\r\n   * captures any pre-set values for registered properties.\r\n   * @protected\r\n   */\r\n  initialize() {\r\n    super.initialize();\r\n    (this.constructor as typeof LitElement)._getUniqueStyles();\r\n    (this as {\r\n      renderRoot: Element|DocumentFragment;\r\n    }).renderRoot = this.createRenderRoot();\r\n    // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\r\n    // element's getRootNode(). While this could be done, we're choosing not to\r\n    // support this now since it would require different logic around de-duping.\r\n    if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\r\n      this.adoptStyles();\r\n    }\r\n\r\n    this._$destroyed = new Subject();\r\n    this._iceInitialized = false;\r\n    this._renderBufferInitialized = false;\r\n    this._$changedProperties = new Subject<PropertyValues>();\r\n\r\n    this._initRenderBuffer();\r\n  }\r\n\r\n  /**\r\n   * Returns the node into which the element should render and by default\r\n   * creates and returns an open shadowRoot. Implement to customize where the\r\n   * element's DOM is rendered. For example, to render into the element's\r\n   * childNodes, return `this`.\r\n   * @returns {Element|DocumentFragment} Returns a node into which to render.\r\n   * @protected\r\n   */\r\n  createRenderRoot(): Element|ShadowRoot {\r\n    return this.attachShadow({mode: 'open'});\r\n  }\r\n\r\n  /**\r\n   * Applies styling to the element shadowRoot using the [[`styles`]]\r\n   * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\r\n   * available and will fallback otherwise. When Shadow DOM is polyfilled,\r\n   * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\r\n   * is available but `adoptedStyleSheets` is not, styles are appended to the\r\n   * end of the `shadowRoot` to [mimic spec\r\n   * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\r\n   * @protected\r\n   */\r\n  adoptStyles() {\r\n    const styles = (this.constructor as typeof LitElement)._styles! as CSSResult[];\r\n    if (styles.length === 0) {\r\n      return;\r\n    }\r\n    // There are three separate cases here based on Shadow DOM support.\r\n    // (1) shadowRoot polyfilled: use ShadyCSS\r\n    // (2) shadowRoot.adoptedStyleSheets available: use it\r\n    // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\r\n    // rendering\r\n    if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\r\n      window.ShadyCSS.ScopingShim!.prepareAdoptedCssText(\r\n          styles.map((s) => s.cssText), this.localName);\r\n    } else if (supportsAdoptingStyleSheets) {\r\n      (this.renderRoot as ShadowRoot).adoptedStyleSheets =\r\n          styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet!);\r\n    } else {\r\n      // This must be done after rendering so the actual style insertion is done\r\n      // in `update`.\r\n      this._needsShimAdoptedStyleSheets = true;\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    // Note, first update/render handles styleElement so we only call this if\r\n    // connected after first update.\r\n    if (this.hasUpdated && window.ShadyCSS !== undefined) {\r\n      window.ShadyCSS.styleElement(this);\r\n    }\r\n\r\n    // Reinitialize if the component was reinserted into DOM\r\n    if(!this._renderBufferInitialized) this._initRenderBuffer();\r\n  }\r\n  \r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n\r\n    this._$destroyed.next();\r\n    this._renderBufferInitialized = false;\r\n  }\r\n\r\n  /**\r\n   * Updates the element. This method reflects property values to attributes\r\n   * and calls `render` to render DOM via lit-html. Setting properties inside\r\n   * this method will *not* trigger another update.\r\n   * @param _changedProperties Map of changed properties with old values\r\n   * @protected\r\n   */\r\n  update(changedProperties: PropertyValues) {\r\n    this._$changedProperties.next(changedProperties);\r\n  }\r\n\r\n  _doUpdate(changedProperties: PropertyValues) {\r\n    // Setting properties in `render` should not trigger an update. Since\r\n    // updates are allowed after super.update, it's important to call `render`\r\n    // before that.\r\n    const templateResult = this.render();\r\n    super.update(changedProperties);\r\n    // If render is not implemented by the component, don't call lit-html render\r\n    if (templateResult !== renderNotImplemented) {\r\n      (this.constructor as typeof LitElement)\r\n          .render(\r\n              templateResult,\r\n              this.renderRoot,\r\n              {scopeName: this.localName, eventContext: this});\r\n    }\r\n    // When native Shadow DOM is used but adoptedStyles are not supported,\r\n    // insert styling after rendering to ensure adoptedStyles have highest\r\n    // priority.\r\n    if (this._needsShimAdoptedStyleSheets) {\r\n      this._needsShimAdoptedStyleSheets = false;\r\n      ((this.constructor as typeof LitElement)._styles! as CSSResult[]).forEach((s) => {\r\n        const style = document.createElement('style');\r\n        style.textContent = s.cssText;\r\n        this.renderRoot.appendChild(style);\r\n      });\r\n    }\r\n\r\n    this._$rerendered!.next();\r\n  }\r\n\r\n  /**\r\n   * Invoked on each update to perform rendering tasks. This method may return\r\n   * any value renderable by lit-html's `NodePart` - typically a\r\n   * `TemplateResult`. Setting properties inside this method will *not* trigger\r\n   * the element to update.\r\n   * @protected\r\n   */\r\n  render(): unknown {\r\n    return renderNotImplemented;\r\n  }\r\n\r\n  onInitCalled() {\r\n    this._iceInitialized = true;\r\n  }\r\n\r\n  onDestroyCalled() {\r\n    this._iceInitialized = false;\r\n  }\r\n\r\n  /*\r\n  // \"Lazy rendering\"\r\n  // See: https://julienrenaux.fr/2019/04/01/lit-element-rendering-strategies-explained/#lazy-rendering\r\n  async performUpdate() {\r\n    await new Promise((resolve) => setTimeout(resolve));\r\n    super.performUpdate();\r\n  }\r\n  */\r\n}\r\n\r\n}\r\n\r\nexport class LitElement extends LitElementMixin(HTMLElement) {}"]}